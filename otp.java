import java.io.*;
import java.util.*;  
class OTP 
{
    static String XOR(String a, String b, int n)
        {
        String ans = "";
         for (int i = 0; i < n; i++)
        {
            // If the Character matches
            if (a.charAt(i) == b.charAt(i))
                ans += "0";
            else
                ans += "1";
        }
        return ans;
        }
        
    static int findRandom()
        {
        	int num = (1 + (int)(Math.random() * 100)) % 2;
            String s = String.valueOf(num);
        	return num;
        }
    static void randomkey(int n)
        {
        	String S = "";
        	for(int i = 0; i < n; i++)
        	{
        		int x = findRandom();
        		S = S + String.valueOf(x);
        	}
        	System.out.println(S);
        }
        
        //This is the encryption function, it takes plaintext as an input and generates corrosponding ciphertext
        
        static String enc(String pt, int n)
        {
           String key= "1111"; //the system has a fixed key
           String ct = XOR(pt,key, n);
           return ct; //ciphertext is generated by XORing plaintext and key
        }
        
        static String attack (String ct, int n)
        {
            //this is what the attacker does
            //attacker already has access to original ciphertext obtained from the original plaintext. This is because it is a chosen plaintext attack. 
            //attacker has access to ct. 
            
            String pt_attack = "0001"; 
            //the attacker sends a their own plaintext into the enc function. 
            String ct_attack = enc (pt_attack,n);
            //Now the attacker has original ciphertext, their own plaintext and corrosponding ciphertext. 
            //attacker calls xor funciton on pt_attack and ct_attack to obtain original key
            String key = XOR(pt_attack,ct_attack, n);
            //attacker calls xor function on original ciphertext and key to obtain original plaintext
            String plaintext = XOR(ct,key,n);
            return plaintext;
        }
        
    public static void main(String[] args) 
    {
        //String x=XOR("1010","1101");
        //System.out.println(x);
        Scanner sc= new Scanner(System.in); 
        System.out.println("You are the sender please enter the length of your binary message");
        int N= sc.nextInt();
        System.out.println("Kindly enter your message");
        String msg= sc.nextLine();
        String y = enc(msg, N); //this is the original plaintext
        System.out.println("The ciphertext for your message is:" +y);
        System.out.println("**********************************");
        
        String z = attack(y, N);
        System.out.println("The attacker has hacked your system and has access to your message which is:"+z);
        
        
    }
}
